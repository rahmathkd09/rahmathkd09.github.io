import React, {Component} from 'react';
import {Container,Row,Col,Form,Button,Card,Alert} from 'react-bootstrap';
import '../css/bootstrap.min.css'
import ModalPage from './ModalPage';

class Body extends Component {
  constructor(props){
    super(props)
    this.state = {
      dataKaryawan:[],
      valueSearch:'',
      inputId:'',
      inputNama:'',
      inputJabatan:'',
      inputJenisKelamin:'',
      inputTanggalLahir:'',
      
    }
    this.panggilSemua = this.panggilSemua.bind(this)
    this.search = this.search.bind(this)
    this.hapusData = this.hapusData.bind(this)
    this.closeModal = this.closeModal.bind(this)
    this.handleInput = this.handleInput.bind(this)
    this.clearInput = this.clearInput.bind(this)
    this.simpanData = this.simpanData.bind(this)
    this.editData = this.editData.bind(this)
  }

  editData(id){
    fetch(`http://localhost:3000/data-karyawan/${id}`).then((response)=>response.json()).then((hasil=>{
      this.props.setModalShow(true)
      this.setState(
        {
          //inputId:hasil.id,
          inputNama:hasil.nama_karyawan,
          inputJabatan:hasil.jabatan,
          inputJeniskelamin:hasil.jenis_kelamin,
          inputTanggalLahir:hasil.tanggal_lahir
        }
      )
    }))
  }

  simpanData(){
    if(this.state.inputId === "" ||this.state.inputNama === "" || this.state.inputJabatan === "" ||
     this.state.inputJenisKelamin === "" | this.state.inputTanggalLahir === ""){
      alert("Silahkan isi data terlebih dahulu coy")
    }else if(this.state.inputId==="") {
      fetch(`http://localhost:3000/data-karyawan`,{
        method: 'POST',
        body: JSON.stringify({
          id:this.state.inputId,
          nama_karyawan: this.state.inputNama,
          jabatan: this.state.inputJabatan,
          jenis_kelamin: this.state.inputJenisKelamin,
          tanggal_lahir:this.state.inputTanggalLahir
        }),
        headers:{
          'Content-type': 'application/json; charset=UTF-8'
        },
      }).then((response)=>response.json()).then((result=>{
          this.closeModal()
          this.panggilSemua()
        }))
    }else{
      fetch(`http://localhost:3000/data-karyawan/${this.state.inputId}`,{
        method: 'PUT',
        body: JSON.stringify({
          id:this.state.inputId,
          nama_karyawan: this.state.inputNama,
          jabatan: this.state.inputJabatan,
          jenis_kelamin: this.state.inputJenisKelamin,
          tanggal_lahir:this.state.inputTanggalLahir
        }),
        headers:{
          'Content-type': 'application/json; charset=UTF-8'
        },
      }).then((response)=>response.json()).then((hasil=>{
          this.panggilSemua()
          this.props.setModalShow(false)
          this.clearInput()
        }))
    }
  }

    handleInput(value,e){
    this.setState({[value]:e.target.value})
  }
  closeModal(){
    this.props.setModalShow(false)
    this.clearInput()
  }

  clearInput(){
    this.setState(
      {
      inputId:'',
        inputNama:'',
        inputJabatan:'',
        inputJenisKelamin:'',
        inputTanggalLahir:''
      }
    )
  }
  search(e){
    this.setState({valueSearch:e.target.value})
  }

  panggilSemua(){
    fetch("http://localhost:3000/data-karyawan")
      .then((response)=>response.json())
      .then((hasil)=>this.setState({dataKaryawan: hasil}))
  }

  componentDidMount(){
    this.panggilSemua()
  }

  hapusData(id){
    fetch(`http://localhost:3000/data-karyawan/${id}`,{method:'DELETE',}).then((response=>{
      alert('Data Sudah Terhapus')
      this.panggilSemua()
    }))
  }

  render(){
    return(
      <Container>
        <ModalPage
        modalShow={this.props.modalShow}
        setModalShow={this.props.setModalShow}
        closeModal={this.closeModal}
        handleInput={this.handleInput}
        dataState={this.state}
        simpanData={this.simpanData}
        />
        <Row style={{marginTop:'30px'}} >
          <Col lg={12}>
            <Alert variant="success" align="center">Data Karyawan </Alert>
          </Col>
        </Row>
        <Row style={{marginTop:'30px'}}>
          
          <Col lg={10}>
          
            <Form.Control type="text" placeholder="Cari Data" value={this.state.valueSearch} onChange={(e)=>this.search(e)}/>
          </Col>
          <Col lg={2}>
            <Button onClick={()=>this.props.setModalShow(true)}  varian="primary">Tambah Data</Button>
          </Col>
        </Row>
        <Row>
          {
            this.state.dataKaryawan.reverse().filter(valueFilter =>valueFilter.nama_karyawan.toLowerCase().includes(this.state.valueSearch.toLowerCase())).map((value,index)=>{
              return(
                <Card  style={{width:'200px', marginTop:'30px', marginLeft:'20px'}} key={index}>
              {
               // <Card.Img style={{height:'120px'}} variant="top" src={value.linkgambar}/>
              }
                <Card.Body>
                  <Card.Title>Nama: {value.nama_karyawan}</Card.Title>
                  <Card.Text>NIK: {value.id}</Card.Text>
                  <Card.Text>Jabatan: {value.jabatan}</Card.Text>
                  <Card.Text>Jenis Kelamin: {value.jenis_kelamin}</Card.Text>
                  <Card.Text>TTL: {value.tanggal_lahir}</Card.Text>
                </Card.Body>
                <Card.Footer>
                  <Button onClick={()=>this.hapusData(value.id)} style={{marginRight:'5%'}} variant='outline-danger'>Hapus</Button>
                  <Button onClick={()=>this.editData(value.id)} variant='outline-primary'>Edit</Button>
                </Card.Footer>
              </Card>
              )
            })
          }
        </Row>
      </Container>
    )
  }
}

export default Body;
