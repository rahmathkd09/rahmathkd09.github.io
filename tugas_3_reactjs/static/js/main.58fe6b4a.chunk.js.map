{"version":3,"sources":["Page/Header.js","ListData/ListMakanan.js","Page/MenuMakanan.js","Page/MenuTentangKami.js","Page/MenuKontak.js","Events/TopEvents.js","Page/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","align","ListMakanan","props","state","datalist","list","src","this","alt","width","height","Component","MenuMakanan","pesan","jenisPesanan","rubahPesanan","bind","pesanan","setState","e","console","log","target","value","onClick","type","onChange","MenuTentangKami","tentang","MenuKontak","alamat","kontak","TopEvents","href","preventDefault","alert","handleFooter","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"8OASeA,MAPf,WACI,OACC,yBAAKC,MAAM,WACR,wE,OCcOC,E,kDAhBb,WAAaC,GAAO,IAAD,8BACjB,cAAOA,IACFC,MAAQ,CACXC,SAAU,EAAKF,MAAMG,MAHN,E,qDAQjB,OACE,6BACC,yBAAKC,IAAKC,KAAKJ,MAAMC,SAAUI,IAAI,kBAAkBC,MAAO,MAAMC,OAAO,a,GAXtDC,aCuEXC,E,kDArEb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXU,MAAQ,EACRC,aAAc,yBAEhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBAPE,E,2DAWjBT,KAAKW,UAAS,SAACf,EAAOD,GACpB,MAAM,CACJW,MAAOV,EAAMU,MAAQ,Q,8BAInBM,GACNC,QAAQC,IAAIF,EAAEG,OAAOC,S,+BAGd,IAAD,OACN,OACE,6BACE,oEACA,+BACE,+BACE,4BACE,4BACE,kBAAC,EAAD,CAAalB,KAAK,6EAClB,gCACE,4BAAQmB,QAASjB,KAAKQ,cAAtB,oBAGJ,4BACE,kBAAC,EAAD,CAAaV,KAAK,uEAClB,gCACE,4BAAQmB,QAASjB,KAAKQ,cAAtB,oBAGJ,4BACE,kBAAC,EAAD,CAAaV,KAAK,+EAClB,gCACE,4BAAQmB,QAASjB,KAAKQ,cAAtB,oBAGJ,4BACE,kBAAC,EAAD,CAAaV,KAAK,4GAClB,gCACE,4BAAQmB,QAASjB,KAAKQ,cAAtB,oBAGJ,4BACE,kBAAC,EAAD,CAAaV,KAAK,6EAClB,gCACE,4BAAQmB,QAASjB,KAAKQ,cAAtB,uBAMV,6BACA,2BAAOU,KAAK,OAAOF,MAAQhB,KAAKJ,MAAMW,aAAcY,SAAU,SAACP,GAAD,OAAK,EAAKF,QAAQE,MAChF,8CAAoBZ,KAAKJ,MAAMU,Y,GAhEbF,aCoBXgB,E,kDApBb,WAAazB,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXyB,QAAS,wIAHO,E,qDASlB,OACE,6BACE,gCACE,2CAAoBrB,KAAKJ,MAAMyB,c,GAbXjB,aCuBfkB,E,kDAtBb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX2B,OAAQ,uFACRC,OAAQ,gBAJO,E,qDAUjB,OACE,6BACE,gCACE,4BAAKxB,KAAKJ,MAAM2B,QAChB,4CAAkBvB,KAAKJ,MAAM4B,c,GAfdpB,aCgBVqB,EAhBE,WAOjB,OAEA,uBAAGC,KAAK,IAAIT,QAAS,SAAAL,GAAC,OARF,SAACI,EAAMJ,GACzBA,EAAEe,iBACFC,MAAMZ,GAMgBa,CAAa,eAAejB,KAApD,iBCKekB,E,uKAXb,OACC,6BACA,kBAAC,EAAD,MACA,uD,GALkB1B,aC2BJ2B,G,6KApBb,OACE,yBAAKtC,MAAM,UACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARYW,cCIE4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpC,QAAQoC,MAAMA,EAAMC,a","file":"static/js/main.58fe6b4a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header(){\r\n    return(\r\n    \t<div align=\"center>\">\r\n        <h3>Home | Product | Kontak | Tentang Kami</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React, { Component  } from 'react';\r\n\r\nclass ListMakanan extends Component{\r\n\t\tconstructor (props){\r\n\t\t\t\tsuper (props)\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\tdatalist: this.props.list\r\n\t\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\trender() {\r\n\t\t\t\treturn(\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={this.state.datalist} alt=\"Product Makanan\" width= \"150\" height=\"100\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n\r\n}\r\nexport default ListMakanan;\r\n","import React, { Component } from 'react';\r\nimport ListMakanan from \"../ListData/ListMakanan\";\r\n\r\nclass MenuMakanan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pesan : 0,\r\n      jenisPesanan: \"Masukkan Pesanan Anda\"\r\n    };\r\n    this.rubahPesanan = this.rubahPesanan.bind(this);\r\n    this.pesanan = this.pesanan.bind(this);\r\n  }\r\n\r\n  rubahPesanan(){\r\n    this.setState((state, props) => {\r\n      return{\r\n        pesan: state.pesan + 1\r\n      }\r\n    })\r\n  }\r\n  pesanan(e){\r\n    console.log(e.target.value);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h3>Daftar Makanan Yang Kami Sediakan : </h3>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\" />\r\n                <center>\r\n                  <button onClick={this.rubahPesanan}>Pesan Sekarang</button>\r\n                </center>\r\n              </td>\r\n              <td>\r\n                <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\" />\r\n                <center>\r\n                  <button onClick={this.rubahPesanan}>Pesan Sekarang</button>\r\n                </center>\r\n              </td>\r\n              <td>\r\n                <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\" />\r\n                <center>\r\n                  <button onClick={this.rubahPesanan}>Pesan Sekarang</button>\r\n                </center>\r\n              </td>\r\n              <td>\r\n                <ListMakanan list=\"https://www.dbs.com/iwov-resources/images/newsroom/indonesia/Blog/masakan%20nusantara/nasi%20kentut.png\" />\r\n                <center>\r\n                  <button onClick={this.rubahPesanan}>Pesan Sekarang</button>\r\n                </center>\r\n              </td>\r\n              <td>\r\n                <ListMakanan list=\"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\" />\r\n                <center>\r\n                  <button onClick={this.rubahPesanan}>Pesan Sekarang</button>\r\n                </center>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n        <input type=\"text\" value= {this.state.jenisPesanan }onChange={(e)=>this.pesanan(e)} />\r\n        <h3>Pesanan Anda : {this.state.pesan}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuMakanan;","import React, { Component  } from 'react';\r\n\r\nclass MenuTentangKami extends Component {\r\n\t\tconstructor (props) {\r\n\t\t\t\tsuper(props)\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\ttentang: \"Warung Nusantara Adalah Restoran Yang Bernuansa Makanan Nusantara, Kami Ada Untuk Membuat Anda Menikmati Makanan Khas Dari Nusantara\"\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\trender(){\r\n\t\t\t\treturn(\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t\t\t\t<p>Tentang Kami</p>{this.state.tentang}\r\n\t\t\t\t\t\t\t\t</center>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n\r\n}\r\n\r\nexport default MenuTentangKami\r\n","import React, { Component } from 'react';\r\n\r\nclass MenuKontak extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props)\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\talamat: \"Jl.Swadaya Ciranggon Cipayung Kota Jakarta Timur Daerah Khusus Ibukota Jakarta 13860\",\r\n\t\t\t\t\t\tkontak: \"081312345678\"\r\n\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\trender () {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<center>\r\n\t\t\t\t\t\t\t\t\t\t<h3>{this.state.alamat}</h3>\r\n\t\t\t\t\t\t\t\t\t\t<h4>Kontak Kami: {this.state.kontak}</h4>\r\n\t\t\t\t\t\t\t\t</center>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t}\r\n}\r\n\r\n\r\nexport default MenuKontak\r\n","\r\nimport React from 'react'\r\nconst TopEvents =() => {\r\n\tconst handleFooter=(value,e)=> {\r\n\t\te.preventDefault()\r\n\t\talert(value)\r\n\r\n\t}\r\n\r\nreturn(\r\n\r\n<a href=\"/\" onClick={e=>handleFooter(\"Back to Home\",e)} >\r\nBack To Home\r\n</a>\r\n\r\n\t)\r\n}\r\n\r\nexport default TopEvents\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport TopEvents from '../Events/TopEvents';\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t<TopEvents />\r\n\t\t\t<h3> Tugas 3 React JS </h3>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default Footer","import React, { Component } from 'react'\nimport Header from './Page/Header'\nimport MenuMakanan from './Page/MenuMakanan'\nimport MenuTentangKami from './Page/MenuTentangKami'\nimport MenuKontak from './Page/MenuKontak'\nimport Footer  from './Page/Footer'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div align=\"center\">\n      <Header />\n      <MenuMakanan />\n      <MenuTentangKami />\n      <MenuKontak />\n      <Footer />\n\n      </div>\n      );\n\n\n\n\n\n        }\n\n\n  }\n\n  export default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}