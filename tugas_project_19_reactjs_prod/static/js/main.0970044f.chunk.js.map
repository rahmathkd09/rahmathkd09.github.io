{"version":3,"sources":["component/ModalPage.js","component/Body.js","App.js","serviceWorker.js","index.js"],"names":["ModalPage","props","Modal","size","centered","show","modalShow","onHide","setModalShow","Header","Title","Body","Form","Control","value","dataState","inputNama","onChange","e","handleInput","style","marginTop","marginBottom","type","placeholder","inputJabatan","inputJenisKelamin","inputTanggalLahir","Footer","Button","onClick","closeModal","variant","simpanData","state","dataKaryawan","valueSearch","inputId","panggilSemua","bind","search","hapusData","clearInput","editData","id","fetch","then","response","json","hasil","setState","nama_karyawan","jabatan","inputJeniskelamin","jenis_kelamin","tanggal_lahir","this","alert","method","body","JSON","stringify","headers","result","target","Container","Row","Col","lg","Alert","align","varian","reverse","filter","valueFilter","toLowerCase","includes","map","index","Card","width","marginLeft","key","Text","marginRight","Component","App","React","useState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0970044f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Modal, Button, Form} from 'react-bootstrap';\r\nimport '../css/bootstrap.min.css'\r\n\r\nfunction ModalPage(props){\r\n  return(\r\n    <Modal size=\"lg\" centered\r\n    show={props.modalShow}\r\n    onHide={()=>props.setModalShow(true)}>\r\n      <Modal.Header>\r\n        <Modal.Title>Detail Data</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Control value={props.dataState.inputNama} onChange={(e)=>props.handleInput('inputNama',e)} style={{marginTop:'20px', marginBottom:'20px'}}type=\"text\" placeholder=\"Masukkan Nama\"/>\r\n        <Form.Control value={props.dataState.inputJabatan} onChange={(e)=>props.handleInput('inputJabatan',e)}  style={{marginTop:'20px', marginBottom:'20px'}} type=\"text\" placeholder=\"Jabatan\"/>\r\n        <Form.Control value={props.dataState.inputJenisKelamin} onChange={(e)=>props.handleInput('inputJenisKelamin',e)}  style={{marginTop:'20px', marginBottom:'20px'}} type=\"text\" placeholder=\"Jenis Kelamin\"/>\r\n        <Form.Control value={props.dataState.inputTanggalLahir} onChange={(e)=>props.handleInput('inputTanggalLahir',e)} style={{marginTop:'20px', marginBottom:'20px'}} type=\"date\" placeholder=\"Tanggal Lahir\"/>\r\n\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={()=>props.closeModal()} variant=\"secondary\">Close</Button>\r\n        <Button onClick={()=>props.simpanData()} variant=\"success\">Simpan</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalPage;\r\n","import React, {Component} from 'react';\r\nimport {Container,Row,Col,Form,Button,Card,Alert} from 'react-bootstrap';\r\nimport '../css/bootstrap.min.css'\r\nimport ModalPage from './ModalPage';\r\n\r\nclass Body extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      dataKaryawan:[],\r\n      valueSearch:'',\r\n      inputId:'',\r\n      inputNama:'',\r\n      inputJabatan:'',\r\n      inputJenisKelamin:'',\r\n      inputTanggalLahir:'',\r\n      \r\n    }\r\n    this.panggilSemua = this.panggilSemua.bind(this)\r\n    this.search = this.search.bind(this)\r\n    this.hapusData = this.hapusData.bind(this)\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.handleInput = this.handleInput.bind(this)\r\n    this.clearInput = this.clearInput.bind(this)\r\n    this.simpanData = this.simpanData.bind(this)\r\n    this.editData = this.editData.bind(this)\r\n  }\r\n\r\n  editData(id){\r\n    fetch(`http://localhost:3000/data-karyawan/${id}`).then((response)=>response.json()).then((hasil=>{\r\n      this.props.setModalShow(true)\r\n      this.setState(\r\n        {\r\n          //inputId:hasil.id,\r\n          inputNama:hasil.nama_karyawan,\r\n          inputJabatan:hasil.jabatan,\r\n          inputJeniskelamin:hasil.jenis_kelamin,\r\n          inputTanggalLahir:hasil.tanggal_lahir\r\n        }\r\n      )\r\n    }))\r\n  }\r\n\r\n  simpanData(){\r\n    if(this.state.inputNama === \"\" || this.state.inputJabatan === \"\" ||\r\n     this.state.inputJenisKelamin === \"\" | this.state.inputTanggalLahir === \"\"){\r\n      alert(\"Silahkan isi data terlebih dahulu coy\")\r\n    }else if(this.state.inputId===\"\") {\r\n      fetch(`http://localhost:3000/data-karyawan`,{\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          \r\n          nama_karyawan: this.state.inputNama,\r\n          jabatan: this.state.inputJabatan,\r\n          jenis_kelamin: this.state.inputJenisKelamin,\r\n          tanggal_lahir:this.state.inputTanggalLahir\r\n        }),\r\n        headers:{\r\n          'Content-type': 'application/json; charset=UTF-8'\r\n        },\r\n      }).then((response)=>response.json()).then((result=>{\r\n          this.closeModal()\r\n          this.panggilSemua()\r\n        }))\r\n    }else{\r\n      fetch(`http://localhost:3000/data-karyawan/${this.state.inputId}`,{\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          \r\n          nama_karyawan: this.state.inputNama,\r\n          jabatan: this.state.inputJabatan,\r\n          jenis_kelamin: this.state.inputJenisKelamin,\r\n          tanggal_lahir:this.state.inputTanggalLahir\r\n        }),\r\n        headers:{\r\n          'Content-type': 'application/json; charset=UTF-8'\r\n        },\r\n      }).then((response)=>response.json()).then((hasil=>{\r\n          this.panggilSemua()\r\n          this.props.setModalShow(false)\r\n          this.clearInput()\r\n        }))\r\n    }\r\n  }\r\n\r\n    handleInput(value,e){\r\n    this.setState({[value]:e.target.value})\r\n  }\r\n  closeModal(){\r\n    this.props.setModalShow(false)\r\n    this.clearInput()\r\n  }\r\n\r\n  clearInput(){\r\n    this.setState(\r\n      {\r\n      inputId:'',\r\n        inputNama:'',\r\n        inputJabatan:'',\r\n        inputJenisKelamin:'',\r\n        inputTanggalLahir:''\r\n      }\r\n    )\r\n  }\r\n  search(e){\r\n    this.setState({valueSearch:e.target.value})\r\n  }\r\n\r\n  panggilSemua(){\r\n    fetch(\"http://localhost:3000/data-karyawan\")\r\n      .then((response)=>response.json())\r\n      .then((hasil)=>this.setState({dataKaryawan: hasil}))\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.panggilSemua()\r\n  }\r\n\r\n  hapusData(id){\r\n    fetch(`http://localhost:3000/data-karyawan/${id}`,{method:'DELETE',}).then((response=>{\r\n      alert('Data Sudah Terhapus')\r\n      this.panggilSemua()\r\n    }))\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Container>\r\n        <ModalPage\r\n        modalShow={this.props.modalShow}\r\n        setModalShow={this.props.setModalShow}\r\n        closeModal={this.closeModal}\r\n        handleInput={this.handleInput}\r\n        dataState={this.state}\r\n        simpanData={this.simpanData}\r\n        />\r\n        <Row style={{marginTop:'30px'}} >\r\n          <Col lg={12}>\r\n            <Alert variant=\"success\" align=\"center\">Data Karyawan </Alert>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{marginTop:'30px'}}>\r\n          \r\n          <Col lg={10}>\r\n          \r\n            <Form.Control type=\"text\" placeholder=\"Cari Data Berdasarkan Nama\" value={this.state.valueSearch} onChange={(e)=>this.search(e)}/>\r\n          </Col>\r\n          <Col lg={2}>\r\n            <Button onClick={()=>this.props.setModalShow(true)}  varian=\"primary\">Tambah Data</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {\r\n            this.state.dataKaryawan.reverse().filter(valueFilter =>valueFilter.nama_karyawan.toLowerCase().includes(this.state.valueSearch.toLowerCase())).map((value,index)=>{\r\n              return(\r\n                <Card  style={{width:'200px', marginTop:'30px', marginLeft:'20px'}} key={index}>\r\n              {\r\n               // <Card.Img style={{height:'120px'}} variant=\"top\" src={value.linkgambar}/>\r\n              }\r\n                <Card.Body>\r\n                  <Card.Title>Nama: {value.nama_karyawan}</Card.Title>\r\n                  <Card.Text>NIK: {value.id}</Card.Text>\r\n                  <Card.Text>Jabatan: {value.jabatan}</Card.Text>\r\n                  <Card.Text>Jenis Kelamin: {value.jenis_kelamin}</Card.Text>\r\n                  <Card.Text>TTL: {value.tanggal_lahir}</Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                  <Button onClick={()=>this.hapusData(value.id)} style={{marginRight:'5%'}} variant='outline-danger'>Hapus</Button>\r\n                  <Button onClick={()=>this.editData(value.id)} variant='outline-primary'>Edit</Button>\r\n                </Card.Footer>\r\n              </Card>\r\n              )\r\n            })\r\n          }\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import React from 'react';\nimport './css/bootstrap.min.css'\nimport Body from './component/Body.js'\n\n\n\nfunction App() {\n  const[modalShow,setModalShow] = React.useState(false)\n  return (\n    <div>\n      <Body modalShow={modalShow}\n      setModalShow={setModalShow}/>\n    </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}