{"version":3,"sources":["Component/Row1.js","Component/Row2.js","Component/Row3.js","Component/Pagecontainer.js","App.js","serviceWorker.js","index.js"],"names":["Row1","react_default","a","createElement","Fragment","Row","Col","sm","Alert","variant","md","ButtonGroup","Button","Badge","xs","lg","Media","width","height","className","src","alt","Body","Component","Row2","Breadcrumb","Item","href","active","Row3","noGutters","Card","Img","Title","Text","Pagecontainer","Container","fluid","style","marginTop","Component_Row1","Component_Row2","Component_Row3","App","Component_Pagecontainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e8d25a1.chunk.js","sourcesContent":["import React, { Component} from 'react'\r\nimport {Row,Col,Alert,Media,ButtonGroup,Badge,Button} from 'react-bootstrap'\r\n\r\nclass Row1 extends Component {\r\n    render(){\r\n        return(\r\n            <>  \r\n    <Row>\r\n          <Col sm={3}><Alert variant=\"primary\"> Website react Bootstrap</Alert></Col>\r\n          <Col></Col>\r\n          <Col md=\"auto\">\r\n            <ButtonGroup >\r\n              <Button variant=\"primary\">Notification<Badge variant=\"light\">9</Badge></Button>\r\n              <Button variant=\"primary\">Message<Badge variant=\"light\">19</Badge></Button>\r\n            </ButtonGroup>\r\n          </Col>\r\n          <Col xs lg=\"2\">\r\n          <Media>\r\n            <img\r\n              width={30}\r\n              height={30}\r\n              className=\"mr-3\"\r\n              src=\"https://banner2.kisspng.com/20180420/kuq/kisspng-computer-icons-user-clip-art-my-vector-5ad9a348cd2ce1.8035052415242125528404.jpg\"\r\n              alt=\"Generic placeholder\"\r\n            />\r\n            <Media.Body>\r\n              <h5>Andreas</h5>\r\n            </Media.Body>\r\n          </Media>\r\n          </Col>\r\n        </Row>\r\n        </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default Row1\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {Col, Row, Breadcrumb} from 'react-bootstrap'\r\n\r\nclass Row2 extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <Row>\r\n          <Col ></Col>\r\n          <Col sm={4}>\r\n            <Breadcrumb>\r\n              <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\r\n              <Breadcrumb.Item href=\"\">Berita</Breadcrumb.Item>\r\n              <Breadcrumb.Item active>Bola</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n          </Col>\r\n        </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Row2\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Card, Button} from 'react-bootstrap'\r\n\r\nclass Row3 extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <Row noGutters={true}>\r\n          <Col>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/f7/ad/diego-godin-vs-thailand_l9viaa2o7afh19gjl6vnekbgq.jpg?t=-1214473334&w=1920&h=1362&quality=100\" />\r\n              <Card.Body>\r\n                <Card.Title>Diego Goding Ukir Rekor Spesial Lawan Thailand</Card.Title>\r\n                <Card.Text>\r\n                  Some quick example text to build on the card title and make up the bulk of\r\n                  the cards content.\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Read More</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/30/f0/neymar-psg-paris-saint-germain-2018-19_gmakk5891n9c19udcwofmrsgc.jpg?t=-1258742791&quality=60&w=1600\" />\r\n              <Card.Body>\r\n                <Card.Title>Neymar Bahas Kontrak Baru Di Paris Saint-German</Card.Title>\r\n                <Card.Text>\r\n                  Some quick example text to build on the card title and make up the bulk of\r\n                  the cards content.\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Read More</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/f3/33/england-celebrate-vs-montenegro_e97kv5anpqlq1gr9nc2qaz4ko.jpg?t=-1232521935&quality=60&w=1600\" />\r\n              <Card.Body>\r\n                <Card.Title>Inggris Mau Jadi Tim Terbaik Di Dunia</Card.Title>\r\n                <Card.Text>\r\n                  Some quick example text to build on the card title and make up the bulk of\r\n                  the cards content.\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Read More</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n              <Card.Img variant=\"top\" src=\"https://images.performgroup.com/di/library/GOAL/63/7f/sani-rizki-fauzi-indonesia-u-22_4yztc4nehkt61fa7omuyagf71.jpg?t=351764441&quality=60&w=1600\" />\r\n              <Card.Body>\r\n                <Card.Title>Sani Rizki Fauzi Tegaskan Mental Pemain Timnas Indonesia</Card.Title>\r\n                <Card.Text>\r\n                  Some quick example text to build on the card title and make up the bulk of\r\n                  the cards content.\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Read More</Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n          </Col>\r\n        </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Row3\r\n\r\n\r\n\r\n","import React, {Component } from 'react'\r\nimport {Container} from 'react-bootstrap'\r\nimport Row1 from '../Component/Row1'\r\nimport Row2 from '../Component/Row2'\r\nimport Row3 from '../Component/Row3'\r\nclass Pagecontainer extends Component{\r\n    render(){\r\n        return(\r\n            <>\r\n            <Container fluid={true} style={{marginTop: \"15px\"}}>\r\n         <Row1 />\r\n         <Row2 />\r\n         <Row3 />\r\n        \r\n       \r\n      </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Pagecontainer","import React, { Component } from 'react';\nimport Pagecontainer from './Component/Pagecontainer'\n//import { Container, Row, Col, Badge, Breadcrumb,ButtonGroup, Button, Card, Alert, Media } from \"react-bootstrap\";\n\nclass App extends Component {\n  render(){\n    return (\n      <>\n      <Pagecontainer />\n      </>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}